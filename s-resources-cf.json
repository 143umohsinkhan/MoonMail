{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:${region}:*:*"
            },
            "$${logsStatementTemplate}",
            "$${lambdaStatementTemplate}",
            "$${sqsStatementTemplate}",
            "$${sesStatementTemplate}",
            "$${kinesisStatementTemplate}",
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "RecipientsImportS3Bucket" } , "/*" ]]}
            },
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": { "Fn::Join" : [
                  "", [ "arn:aws:dynamodb:${region}:", { "Ref" : "AWS::AccountId" } , ":table/*" ]
               ] }
             },
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": { "Fn::Join" : [
                  "", [ "arn:aws:dynamodb:${region}:", { "Ref" : "AWS::AccountId" } , ":table/*/index/*" ]
               ] }
             }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambda"
          }
        ]
      }
    },
    "SendEmailsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sendEmailsTopic}"
      }
    },
    "SendCampaignTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sendCampaignTopic}"
      }
    },
    "EmailNotificationsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${emailNotificationsTopic}"
      }
    },
    "PrecompileCampaignTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${precompileCampaignTopic}"
      }
    },
    "PrecompileEmailTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${precompileEmailTopic}"
      }
    },
    "AttachRecipientsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachRecipientsTopic}"
      }
    },
    "AttachRecipientsCountTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachRecipientsCountTopic}"
      }
    },
    "SentEmailsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sentEmailsTopic}"
      }
    },
    "FreeUsersSendEmailQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "${project}-${stage}-FreeUsersSendEmail"
      }
    },
    "FreeUsersQueuePopulatedAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if free users queue is not empty",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [{
          "Name": "QueueName",
          "Value" : { "Fn::GetAtt" : ["FreeUsersSendEmailQueue", "QueueName"] }
        }],
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{
          "Ref": "SendEmailsTopic"
        }]
      }
    },
    "LinksTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "$${linksTable}"
      }
    },
    "SentEmailsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "messageId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "messageId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "$${sentEmailsTable}"
      }
    },
    "ReportsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "campaignId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "campaignId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "$${reportsTable}"
      }
    },
    "CampaignsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "$${campaignsTable}"
      }
    },
    "OpensStream": {
       "Type" : "AWS::Kinesis::Stream",
       "Properties" : {
          "ShardCount" : 1
       }
    },
    "ClicksStream": {
       "Type" : "AWS::Kinesis::Stream",
       "Properties" : {
          "ShardCount" : 1
       }
    },
    "RecipientsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "listId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "recipientStatus",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "ListRecipientsIndex",
            "KeySchema": [
              {
                "AttributeName": "listId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "recipientStatus",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ],
        "TableName": "${project}-recipients-${stage}"
      }
    },
    "ListsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "$${listsTable}"
      }
    },
    "RecipientsImportS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicReadWrite",
        "BucketName": "${project}-recipients-${stage}",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders" : [],
              "AllowedMethods" : [ "GET", "PUT", "POST", "HEAD" ],
              "AllowedOrigins" : [ "*" ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    },
    "QueueURL" : {
      "Description" : "URL of newly created SQS Queue",
      "Value" : { "Ref" : "FreeUsersSendEmailQueue" }
    },
    "QueueARN" : {
      "Description" : "ARN of newly created SQS Queue",
      "Value" : { "Fn::GetAtt" : ["FreeUsersSendEmailQueue", "Arn"]}
    },
    "QueueName" : {
      "Description" : "Name newly created SQS Queue",
      "Value" : { "Fn::GetAtt" : ["FreeUsersSendEmailQueue", "QueueName"]}
    },
    "PrecompileCampaignTopicARN" : {
      "Description" : "ARN of the PrecompileCampaign SNS topic",
      "Value" : { "Ref" : "PrecompileCampaignTopic"}
    },
    "SendCampaignTopicARN" : {
      "Description" : "ARN of the SendCampaign SNS topic",
      "Value" : { "Ref" : "SendCampaignTopic"}
    },
    "SendEmailsTopicARN" : {
      "Description" : "ARN of the SendEmails SNS topic",
      "Value" : { "Ref" : "SendEmailsTopic"}
    },
    "EmailNotificationsTopicARN" : {
      "Description" : "ARN of the EmailNotifications SNS topic",
      "Value" : { "Ref" : "EmailNotificationsTopic"}
    },
    "SentEmailsTopicARN" : {
      "Description" : "ARN of the SentEmails SNS topic",
      "Value" : { "Ref" : "SentEmailsTopic"}
    },
    "AttachRecipientsTopicARN" : {
      "Description" : "ARN of the AttachRecipients SNS topic",
      "Value" : { "Ref" : "AttachRecipientsTopic"}
    },
    "AttachRecipientsCountTopicARN" : {
      "Description" : "ARN of the AttachRecipientsCount SNS topic",
      "Value" : { "Ref" : "AttachRecipientsCountTopic"}
    },
    "OpensStreamName" : {
      "Description" : "Name of the Opens Kinesis Stream",
      "Value" : { "Ref" : "OpensStream"}
    },
    "OpensStreamARN" : {
      "Description" : "Name of the Opens Kinesis Stream",
      "Value" : { "Fn::GetAtt" : ["OpensStream", "Arn"]}
    },
    "ClicksStreamName" : {
      "Description" : "Name of the Clicks Kinesis Stream",
      "Value" : { "Ref" : "ClicksStream"}
    },
    "ClicksStreamARN" : {
      "Description" : "Name of the Clicks Kinesis Stream",
      "Value" : { "Fn::GetAtt" : ["ClicksStream", "Arn"]}
    },
    "PrecompileEmailTopicARN": {
      "Description": "ARN of the PrecompileEmailTopic SNS topic",
      "Value": {
        "Ref": "PrecompileEmailTopic"
      }
    },
    "RecipientsImportS3BucketName": {
      "Description": "ARN of the RecipientsImportS3Bucket",
      "Value": {
        "Ref": "RecipientsImportS3Bucket"
      }
    }
  }
}
